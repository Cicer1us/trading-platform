name: build-tss-server-develop

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  ACR_LOGIN_SRV: ${{ secrets.ACR_NAME }}.azurecr.io
  IMAGE_NAME: ${{ secrets.ACR_NAME }}.azurecr.io/bof_validator_server_${{ github.ref_name }}:${{ github.sha }}
  IMAGE_NAME_LATEST: ${{ secrets.ACR_NAME }}.azurecr.io/bof_validator_server_${{ github.ref_name }}:latest
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # type of runner
    runs-on: ubuntu-latest

    # sequence of tasks
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up Node.js version
        uses: actions/setup-node@v2.5.0
        with:
          node-version: '16.x'

      - name: install and build
        run: |
          npm ci
          npm run build

  build_and_push_to_acr:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
      
    steps:
      - uses: actions/checkout@v2
      
      - uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_LOGIN_SRV }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - run: docker build --build-arg NPM_TOKEN=${{ env.NPM_TOKEN }} . -t ${{ env.IMAGE_NAME_LATEST }}
      - run: docker push ${{ env.IMAGE_NAME_LATEST }}
      
      - run: docker tag ${{ env.IMAGE_NAME_LATEST }} ${{ env.IMAGE_NAME }}
      - run: docker push ${{ env.IMAGE_NAME }}