name: Build bof-cp-admin-panel-dev

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  ACR_LOGIN_SRV: ${{ secrets.ACR_NAME }}.azurecr.io
  IMAGE_NAME: ${{ secrets.ACR_NAME }}.azurecr.io/bof_cp_admin_panel_${{ github.ref_name }}:${{github.sha}}
  IMAGE_NAME_LATEST: ${{ secrets.ACR_NAME }}.azurecr.io/bof_cp_admin_panel_${{ github.ref_name }}:latest
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    environment: production
    env:
      NEXT_PUBLIC_ALLPAY_SERVER: ${{ vars.NEXT_PUBLIC_ALLPAY_SERVER }}
      NEXT_PUBLIC_BOF_SERVER: ${{ vars.NEXT_PUBLIC_BOF_SERVER }}
      NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID: ${{ vars.NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js version
        uses: actions/setup-node@v2.5.0
        with:
          node-version: '18.x'

      - name: Create env file
        run: |
              touch .env
              echo NEXT_PUBLIC_ALLPAY_SERVER=${{ vars.NEXT_PUBLIC_ALLPAY_SERVER }} >> .env
              echo NEXT_PUBLIC_BOF_SERVER=${{ vars.NEXT_PUBLIC_BOF_SERVER }} >> .env
              echo NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID=${{ vars.NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID }} >> .env

      - name: install and build
        run: |
          npm ci
          npm run build

      - uses: actions/upload-artifact@v2
        with:
          name: env_file
          path: .env

  build_and_push_to_acr:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: env_file

      - uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_LOGIN_SRV }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - run: docker build --build-arg NPM_TOKEN=${{ env.NPM_TOKEN }} . -t ${{ env.IMAGE_NAME }}
      - run: docker push ${{ env.IMAGE_NAME }}

      - run: docker tag ${{ env.IMAGE_NAME }} ${{ env.IMAGE_NAME_LATEST }}
      - run: docker push ${{ env.IMAGE_NAME_LATEST }}
